- name: check if service file is already existing
  stat:
    path: "{{ service_files_dir }}/{{ service_name }}"
  register: service_file_before_template

- name: ensure "{{ service_name }}" is stopped
  service:
    name: "{{ service_name }}"
    state: stopped
    enabled: no
  when:
    - service_file_before_template.stat.exists

- name: pull container image
  command: "podman pull {{ container_image }}"

- name: create local mount dirs (if defined)
  tags: mounts
  file:
    path: "{{ item.value.host | dirname }}"
    state: directory
    recurse: yes
  loop: "{{ lookup('dict', mounts, wantlist=True) }}"
  when: mounts is defined

- name: "create systemd service file for container: {{ container_name }}"
  template:
    src: systemd-service-single-container.j2
    dest: "{{ service_files_dir }}/{{ service_name }}"
    owner: root
    group: root
    mode: 0644

- name: "ensure service is enabled at boot, and systemd reloaded"
  systemd:
    name: "{{ service_name }}"
    enabled: yes
    state: started
    daemon_reload: yes

- name: ensure container's exposed ports firewall state
  tags: firewall
  firewalld:
    port: "{{ item.value.host }}/tcp"
    permanent: yes
    immediate: yes
    state: enabled
  loop: "{{ lookup('dict', ports, wantlist=True) }}"
  when: ports is defined
