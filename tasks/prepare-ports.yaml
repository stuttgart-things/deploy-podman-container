- name: Calculate list of ports to launch container
  vars:
    current_port: "{{ item.value.host }}:{{ item.value.container }}"
  ansible.builtin.set_fact:
    port_list: "{{ port_list | default([]) + [current_port] }}"
  loop: "{{ lookup('dict', ports, wantlist=True) }}"
  when: ports is defined and ports.values()|length > 0

- name: Set ports to null if no ports are given
  ansible.builtin.set_fact:
    port_list: null
  when: ports is defined and ports.values()|length <= 0

- name: Ensure container's exposed ports firewall state
  tags: firewall
  ansible.posix.firewalld:
    port: "{{ item.value.host }}/tcp"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ lookup('dict', ports, wantlist=True) }}"
  when: ports is defined and ansible_os_family == 'RedHat'

- name: Ensure container's exposed ports firewall state
  tags: firewall
  community.general.ufw:
    rule: allow
    port: "{{ item.value.host }}"
    proto: tcp
  loop: "{{ lookup('dict', ports, wantlist=True) }}"
  when: ports is defined and ansible_os_family == 'Debian'