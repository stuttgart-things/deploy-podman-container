- name: Check if service file is already existing
  ansible.builtin.stat:
    path: "{{ service_files_dir }}/{{ service_name }}"
  register: service_file_before_template

- name: Ensure "{{ service_name }}" is stopped
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: stopped
    enabled: no
  when:
    - service_file_before_template.stat.exists

- name: Make sure there are no cid and pid files present
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ cidfile }}"
    - "{{ pidfile }}"

- name: "Create systemd service file for container: {{ container_name }}"
  ansible.builtin.template:
    src: systemd-service-single-container.j2
    dest: "{{ service_files_dir }}/{{ service_name }}"
    owner: root
    group: root
    mode: 0644

- name: "Ensure service is enabled at boot, and systemd reloaded"
  ansible.builtin.systemd:
    name: "{{ service_name }}"
    enabled: yes
    state: started
    daemon_reload: yes
