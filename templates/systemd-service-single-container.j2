[Unit]
Description={{ container_name }} Podman Container
After=network.target

[Service]
Restart={{ restart_policy }}
Type=simple
TimeoutStartSec={{ systemd_TimeoutStartSec }}
ExecStartPre=-/usr/bin/rm -f {{ pidfile }} {{ cidfile }}
User={{ container_run_as_user }}

ExecStart=/usr/bin/podman run {% if container_run_args is defined %}{{ container_run_args }}{% endif %} \
--name {{ container_name }} \
{% if ports is defined %}{% for port in ports.values() %}
-p {{ port.host }}:{{ port.container }} \
{% endfor %}{% endif %}
{% if env_vars is defined %}{% for env in env_vars.values() %}
-e {{ env.key }}={{ env.value }} \
{% endfor %}{% endif %}
{% if mounts is defined %}{% for mount in mounts.values() %}
-v {{ mount.host }}:{{ mount.container }} \
{% endfor %}{% endif %}
--conmon-pidfile {{ pidfile }} \
--cidfile {{ cidfile }} \
{{ container_image }} {% if container_cmd_args is defined %} \
{{ container_cmd_args }} {% endif %}  

ExecStop=/usr/bin/sh -c "/usr/bin/podman stop -t "{{ container_stop_timeout }}" `cat {{ cidfile }}`"
ExecStop=/usr/bin/sh -c "/usr/bin/podman rm -f `cat {{ cidfile }}`"
Restart={{ container_restart }}
RestartSec={{ systemd_RestartSec }}
KillMode=none
PIDFile={{ pidfile }}

[Install]
WantedBy=multi-user.target
